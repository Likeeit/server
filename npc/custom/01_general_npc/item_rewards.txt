prontera,146,189,6	script	Package Claim	790,{

// --------------------- Config ---------------------
// Package format is "ID1,Count1,ID2,Count2,..."
// GM Access: Level required to open the GM menu.
// GM Delete: Level required to erase entries.
// GM Logging: Level required to manage logs.

	set .GMAccess,61;
	set .MentorAccess,1;
	set .GMDelete,61;
	set .GMLogging,61;
	set .PackageCount,6;
	setarray .Package1[0],2701,1,2729,1,13414,1,2285,1,5170,1,2424,3,2528,3,678,25,12016,25,12033,25,505,50,7136,75,7135,75,658,10,14591,10,714,1;
	setarray .Package2[0],2375,1,2374,1,2357,1,2554,1;
	setarray .Package3[0],668,10,603,5,617,5,616,2,671,2,14532,1;
	setarray .Package4[0],616,5,671,5,12110,5,12194,5;
	setarray .Package5[0],616,10,671,10,12110,10,12194,10,12244,1;
	setarray .Package6[0],616,10,671,10,12110,15,12194,15,12244,1,7623,1;
	
// --------------------------------------------------
	if (getgmlevel() >= .GMAccess) goto GM_Menu;
	if (getgmlevel() >= .MentorAccess) goto Mentor_Menu;
	mes "[Package Claim]";
	set .@i,0;
	while (.@i < getarraysize($itemreward$)) {
		if (strcharinfo(0) == $itemreward$[.@i]) goto GetReward;
		set .@i, .@i+2; }
	mes "You have no rewards pending.";
	close;

GetReward:
	if (((Weight*100)/MaxWeight) > 49) {
		mes "You are over the weight limit."; close; }
	if (!checkweight(5055,getarraysize(getd(".Package"+$itemreward$[.@i+1])))) {
		mes "Clear space in your inventory."; close; }
	set .@j,0;
	while (.@j < getarraysize(getd(".Package"+$itemreward$[.@i+1]))) {
		getitem getd(".Package"+$itemreward$[.@i+1]+"["+.@j+"]"),getd(".Package"+$itemreward$[.@i+1]+"["+(.@j+1)+"]");
		set .@j, .@j+2; }
	specialeffect2 248;
	deletearray $itemreward$[.@i],2;
	mes "Here you go!";
	close;

OnMinute00:
OnMinute30:
	if (!getarraysize($itemreward$)) end;
	set .@i,0;
	while (.@i < getarraysize($itemreward$)) {
		message $itemreward$[.@i],"[You have a reward pending.  See the Package Claim NPC.]";
		sleep 10;
		set .@i, .@i+2; }
	end;
Mentor_Menu:
	mes "[Package Claim]";
	mes "What would you like to do?";
	next;
	switch(select("View Mentee List^000000: ~ [Close]")) {
			case 1:
			function NameLookup;
			function RateMentor;
			set .@j, 0;
			deletearray(.@names$[0],getarraysize(.@positions));
			deletearray(.@positions[0],getarraysize(.@positions));
			for (set .@i, 0; .@i < 128; set .@i, .@i + 1) {
				if ($MenteeList[.@i] && !$MenteeListMentor[.@i]) {
					set .@names$[.@j], NameLookup($MenteeList[.@i]);
					set .@positions[.@j], .@i;
					set .@j, .@j + 1;
				}
			}
			mes "[Package Claim]";
			mes "Here is the list of all available mentees.";
			mes "You may simply select a mentee from the list and you will become their mentor.";
			set .@menu$, "";
			for (set .@i, 0; .@i < getarraysize(.@names$); set .@i, .@i + 1)
				set .@menu$, .@menu$ + ":" + .@names$[.@i];
			set .@chosen, select(.@menu$)-2;
			next;
			mes "[Package Claim]";
			mes "Are you sure you want to be his/her mentor?";
			if (select("Yes:No") == 2) {
				next;
				goto Mentor_Menu;
			}
			mes "You are now the mentor of ^0000FF"+.@names$[.@chosen]+"^000000";
			set $MenteeListMentor[.@positions[.@chosen]], getcharid(0);
			set $MenteeListTime[.@positions[.@chosen]], gettimetick(2) + (7*24*3600);
			next;
			goto Mentor_Menu;
			
		case 2:
			close;
			}
	
GM_Menu:
	mes "[Package Claim]";
	mes "What would you like to do?";
	next;
	switch(select(" ~ ^FF55FFPackage information^000000: ~ ^FF55FFList unclaimed rewards^000000: ~ ^00D900Give a reward^000000: ~ "+((getgmlevel()<.GMDelete)?"^777777":"^DE0000")+"Delete a reward^000000: ~ "+((getgmlevel()<.GMDelete)?"^777777":"^DE0000")+"Delete all unclaimed rewards^000000: ~ "+((getgmlevel()<.GMLogging)?"^777777":"^55AAFF")+"Manage logs^000000: ~ "+((getgmlevel()<1)?"^777777":"^55AAFF")+"View Mentee List^000000: ~ [Close]")) {
		case 1:
			mes "[Package Claim]";
			set .@j,1;
			while (getd(".Package"+.@j)) {
				mes "^660099Package " + .@j + ":^000000";
				set .@i,0;
				while (.@i < getarraysize(getd(".Package"+.@j))) {
					mes " ~ " + getd(".Package"+.@j+"["+(.@i+1)+"]") + "x " + getitemname(getd(".Package"+.@j+"["+(.@i)+"]"));
					set .@i, .@i+2; }
				set .@j, .@j+1; }
			next;
			goto GM_Menu;
		case 2:
			mes "[Package Claim]";
			mes "Used space: ^F52887" + (getarraysize($itemreward$)/2) + "^000000/64";
			mes "--------------------------------";
			set .@i,0;
			while (.@i < getarraysize($itemreward$)) {
				mes "^B041FF" + $itemreward$[.@i] + "^000000: package #" + $itemreward$[.@i+1];
				set .@i, .@i+2; }
			next;
			goto GM_Menu;
		case 3:
			mes "[Package Claim]";
			if (getarraysize($itemreward$) > 127) {
				mes "No more names can be stored.";
				mes "Delete some values and try again.";
				next;
				goto GM_Menu; }
			mes "Input a name, then a package number.";
			input .@name$;
				query_sql "SELECT `char_id` FROM `char` WHERE `name` = '"+.@name$+"'",.@charid;
				if (!.@charid) { mes "The name is invalid."; next; goto GM_Menu; }
			input .@package,1,.PackageCount;
			next;
			mes "[Package Claim]";
			mes "Player: ^B041FF" + .@name$ + "^000000";
			mes "Package: ^B041FF#" + .@package + "^000000";
			mes " ";
			mes "Are you sure?";
			if (select("Yes:No") == 2) { mes "Request cancelled."; next; goto GM_Menu; }
			setarray $itemreward$[getarraysize($itemreward$)],.@name$,.@package;
			message .@name$,"[You have a reward pending.  See the Package Claim NPC.]";
			if ($itemlog) {
				if (getarraysize($itemlog1$) > 127) {
					deletearray $itemlog1$[0],1;
					deletearray $itemlog2$[0],1; }
				setarray $itemlog1$[getarraysize($itemlog1$)],strcharinfo(0);
				setarray $itemlog2$[getarraysize($itemlog2$)],.@name$; }
			mes "Reward added.";
			next;
			for (set .@i, 0; .@i < 128; set .@i, .@i + 1) {
				if ($MenteeList[.@i] == .@charid) {
					goto GM_Menu;
					break;
				}
			}
			// now ask if GM wishes to add player to mentee list
			mes "[Package Claim]";
			mes "Lastly, would you like to add this player to the Mentee List?";
			if (select("Yes:No") == 1) {
				next;
				if (getarraysize($MenteeList) >= 120) {
						mes "[Package Claim]";
						mes "I'm sorry, the Mentee List is currently full.";
						next;
						goto GM_Menu;				
				}
				for (set .@i, 0; .@i < 128; set .@i, .@i + 1) {
					if (!$MenteeList[.@i]) {
						set $MenteeList[.@i], .@charid;
						set $MenteeListTime[.@i], gettimetick(2) + (7*24*3600);
						mes "[Package Claim]";
						mes "Player had been added to the Mentee List.";
						break;
					}
					else if (.@i == 127) {
						mes "[Package Claim]";
						mes "Mentee list is full. Unable to add player to Mentee List."; 
						break;						
					}
					else
						continue;
				}	
			}
			next;
			goto GM_Menu;
		case 4:
			mes "[Package Claim]";
			if (getgmlevel() < .GMDelete) {
				mes "You are not permitted to delete entries."; next; goto GM_Menu; }
			mes "Input a name to cancel a reward.";
			input .@name$;
			set .@i,0;
			while (.@i < getarraysize($itemreward$)) {
				if ($itemreward$[.@i] == .@name$) {
					deletearray $itemreward$[.@i],2;
					mes "Name cleared."; next; goto GM_Menu; }
				set .@i, .@i+2; }
			mes "The name is invalid.";
			next;
			goto GM_Menu;
		case 5:
			mes "[Package Claim]";
			if (getgmlevel() < .GMDelete) {
				mes "You are not permitted to delete entries."; next; goto GM_Menu; }
			mes "^FF0000This action cannot be undone.^000000";
			mes "Are you sure?";
			mes " ";
			if (select("Yes:No") == 2) { mes "Request cancelled."; next; goto GM_Menu; }
			deletearray $itemreward$[0],getarraysize($itemreward$);
			mes "All entries cleared.";
			next;
			goto GM_Menu;
		case 6:
		Log_Menu:
			mes "[Package Claim]";
			if (getgmlevel() < .GMLogging) {
				mes "You are not permitted to manage logs."; next; goto GM_Menu; }
			mes "Logs are currently "+(($itemlog)?"^00D900enabled^000000":"^FF0000disabled^000000")+".";
			next;
			switch(select(" ~ ^55AAFFView Logs^000000: ~ "+((!$itemlog)?"^00D900Enable":"^777777Disable")+" logging^000000: ~ ^DE0000Delete all logs^000000: ~ [Go back]")) {
				case 1:
					mes "[Package Claim]";
					mes "Used space: ^F52887" + (getarraysize($itemlog1$)) + "^000000/128";
					mes "--------------------------------";
					set .@i,0;
					while (.@i < getarraysize($itemlog1$)) {
						mes "^B041FF" + $itemlog1$[.@i] + "^000000: sent to ^55AAFF" + $itemlog2$[.@i] + "^000000";
						set .@i, .@i+1; }
					next;
					goto Log_Menu;
				case 2:
					set $itemlog, ((!$itemlog)?1:0);
					goto Log_Menu;
				case 3:
					mes "[Package Claim]";
					mes "^FF0000This action cannot be undone.^000000";
					mes "Are you sure?";
					mes " ";
					if (select("Yes:No") == 2) { mes "Request cancelled."; next; goto Log_Menu; }
					deletearray $itemlog1$[0],getarraysize($itemlog1$);
					deletearray $itemlog2$[0],getarraysize($itemlog2$);
					mes "Logs cleared.";
					next;
					goto Log_Menu;
				case 4:
					next;
					goto GM_Menu;
			}

		case 7:
			function NameLookup;
			function RateMentor;
			set .@j, 0;
			deletearray(.@names$[0],getarraysize(.@positions));
			deletearray(.@positions[0],getarraysize(.@positions));
			for (set .@i, 0; .@i < 128; set .@i, .@i + 1) {
				if ($MenteeList[.@i] && !$MenteeListMentor[.@i]) {
					set .@names$[.@j], NameLookup($MenteeList[.@i]);
					set .@positions[.@j], .@i;
					set .@j, .@j + 1;
				}
			}
			mes "[Package Claim]";
			mes "Here is the list of all available mentees.";
			mes "You may simply select a mentee from the list and you will become their mentor.";
			set .@menu$, "";
			for (set .@i, 0; .@i < getarraysize(.@names$); set .@i, .@i + 1)
				set .@menu$, .@menu$ + ":" + .@names$[.@i];
			set .@chosen, select(.@menu$)-2;
			next;
			mes "[Package Claim]";
			mes "Are you sure you want to be his/her mentor?";
			if (select("Yes:No") == 2) {
				next;
				goto GM_Menu;
			}
			mes "You are now the mentor of ^0000FF"+.@names$[.@chosen]+"^000000";
			set $MenteeListMentor[.@positions[.@chosen]], getcharid(0);
			set $MenteeListTime[.@positions[.@chosen]], gettimetick(2) + (7*24*3600);
			next;
			goto GM_Menu;
			
		case 8:
			close;
	}
	end;

	function NameLookup {
		set .@charid, getarg(0);
		query_sql "SELECT `name` FROM `char` WHERE `char_id`="+.@charid, .@char_name$;
		if (.@char_name$[0] == "")
			set .@char_name$[0], "Unknown";
		return .@char_name$[0];
	}

	function RateMentor {
		query_sql "CREATE TABLE IF NOT EXISTS `mentor_ratings` (`name` varchar(30) NOT NULL, `mentee_name` varchar(30) NOT NULL, `rating` int(2) NOT NULL default '1') ENGINE=InnoDB DEFAULT CHARSET=latin1";
		query_sql "INSERT INTO `mentor_ratings` VALUES('"+getarg(1)+"', '"+getarg(0)+"', '"+getarg(2)+"')";
	
	}

	OnPCLoginEvent:
		if (HasMentor && MenteeListTime != getcharid(0) && $MenteeList[MenteePosition] != getcharid(0)) {
			mes "^5500ffMentoring period expired!^000000";
			mes "Mentoring period is now over. Please rate your mentor (out of 10).";
			input(.@rating,1,10);
			mes "^0000FFYou have given your mentor a rating of "+.@rating+"/10.^000000";
			RateMentor(strcharinfo(0), NameLookup(HasMentor), .@rating);
			set HasMentor, 0;
			set MenteePosition, 0;
			set .@hadmentor, 1;
			set .@dialog, 1;
		}
		if (!HasMentor) {
			for (set .@i, 0; .@i < 128; set .@i, .@i + 1) {
				if ($MenteeList[.@i] == getcharid(0) && $MenteeListMentor[.@i]) {
					if (.@hadmentor)
						next;
					mes "^5500ffYou have a mentor!^000000";
					mes "Your mentor's name is ^0000FF"+NameLookup($MenteeListMentor[.@i])+"^000000.";
					set HasMentor, $MenteeListMentor[.@i];
					set MenteePosition, .@i;
					set .@dialog, 1;
					break;
				}
			}
		}
		if (.@dialog)
			close;
		end;
}

-	script	ClearMenteeList	-1,{

	OnInit:
		initnpctimer;
		end;

	OnTimer3000:
		for (set .@i, 0; .@i < 128; set .@i, .@i + 1) {
			if (gettimetick(2) >= $MenteeListTime[.@i]) {
				set $MenteeList[.@i], 0;
				set $MenteeListTime[.@i], 0;
				set $MenteeListMentor[.@i], 0;
			}
		}
		setnpctimer 0;
		startnpctimer;
		end;
}