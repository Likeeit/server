// ==============================================================================
// BattleGround System - Common NPCs
// ==============================================================================

// MapFlags
// *********************************************************************

bat_room	mapflag	nomemo
//bat_room	mapflag	nowarpto
bat_room	mapflag	nobranch
bat_room	mapflag	nopenalty
bat_room	mapflag	noteleport
bat_room	mapflag	nosave	SavePoint
// Mapflag Town is required to Join BG Queues
bat_room	mapflag	town

// Battleground Queue Admin
// *********************************************************************
-	script	BG_Queue_Join	-1,{
	end;

OnInit:
	// Jason's BG counter
	set $@Current_Arena, 0;
	// Configuration
	// *****************************************************
	// Battleground Rotation - Main NPC name
	setarray .BG_Arenas$[0],	   "Conquest",    "Rush", "Flavius_CTF", "Flavius_TD";
	// Battleground Arena Name - for announcements
	setarray .BG_Names$[0],		"Conquest",     "Rush", "Capture the Flag", "Team DeathMatch";
	// Minimum Players to start the BG
	setarray .BG_Min[0],	                4,         4, 4, 4;
	// Maximum Players per Team
	setarray .BG_Max[0],	               50,        30, 30, 30;
	// BG Message Colors
	setarray .BG_Color$[0],	    "0xFF9900",  "0xDDA0DD", "0xA0522D", "0x808000";
	// Team Building Mode : 0 = Lineal | 1 = Random | 2 = Class Priority
	set .TeamMode, 2;
	// Main Code
	// *****************************************************
	set .BG_Count, getarraysize(.BG_Arenas$);
	set .BG_Queue, bg_queue_create("Battleground Arena","BG_Queue_Join::OnJoinEvent",80);
	set .VS_Queue, bg_queue_create("Free For All Arena","BG_Queue_Join::OnVersusJoin",80);
	// Move to Next Arena
	if( $BG_Index >= .BG_Count ) set $BG_Index,0; // Restart Rotation
	set .BG_Arena$,.BG_Arenas$[$BG_Index];
	set .Ready, 1;
	donpcevent "BG_Queue_Join::OnDoHappyHour";
	initnpctimer; // Rotation if BG don't start... Comment if you don't want to use this method
	end;

OnRotate:
OnTimer120000: // Rotation if BG don't start... Comment if you don't want to use this method. 120 = 2 Minutes
	set $@BG_Status, 0;
	// Warps Teams
	bg_warp $@BG_Team1,"bat_room",155,150;
	bg_warp $@BG_Team2,"bat_room",155,150;
	bg_warp $@BG_Team3,"bat_room",155,150;

	// Promp players if they wish to rejoin
	set .@bgcount, bg_get_data($@BG_Team1,1);
	for (set .@i, 0; .@i < .@bgcount; set .@i, .@i + 1) {
		set .@accid, getcharid(3,$@bgmembers$[.@i]);
		set .@charid, getcharid(0,$@bgmembers$[.@i]);
		if (.@accid && .@charid && isloggedin(.@accid, .@charid)) {
			attachrid(.@accid);
			doevent strnpcinfo(0)+"::OnAskRejoin";
			detachrid;
		}
	}

	set .@bgcount, bg_get_data($@BG_Team2,1);
	for (set .@i, 0; .@i < .@bgcount; set .@i, .@i + 1) {
		set .@accid, getcharid(3,$@bgmembers$[.@i]);
		set .@charid, getcharid(0,$@bgmembers$[.@i]);
		if (.@accid && .@charid && isloggedin(.@accid, .@charid)) {
			attachrid(.@accid);
			doevent strnpcinfo(0)+"::OnAskRejoin";
			detachrid;
		}
	}

	set .@bgcount, bg_get_data($@BG_Team3,1);
	for (set .@i, 0; .@i < .@bgcount; set .@i, .@i + 1) {
		set .@accid, getcharid(3,$@bgmembers$[.@i]);
		set .@charid, getcharid(0,$@bgmembers$[.@i]);
		if (.@accid && .@charid && isloggedin(.@accid, .@charid)) {
			attachrid(.@accid);
			doevent strnpcinfo(0)+"::OnAskRejoin";
			detachrid;
		}
	}

	// Destroy Teams
	bg_destroy $@BG_Team1; set $@BG_Team1, 0;
	bg_destroy $@BG_Team2; set $@BG_Team2, 0;
	bg_destroy $@BG_Team3; set $@BG_Team3, 0;

	// Move to Next Arena
	if( set($BG_Index,$BG_Index + 1) >= .BG_Count )
		set $BG_Index,0; // Restart Rotation

	set .BG_Arena$,.BG_Arenas$[$BG_Index];
	initnpctimer; // Rotation if BG don't start... Comment if you don't want to use this method

	// Trigger the Event - Maybe people is waiting...
OnJoinEvent:
	if( $@BG_Status == 2 )
		end; // BG Ending... Must wait until OnRotate is called

	set .@Queue_Count, bg_queue_data(.BG_Queue,0);
	switch( $@BG_Status )
	{
	case 0: // Idle - Ready to Start
		if( .BG_Arena$ == "Tierra_TI" )
			set .@Req, .BG_Min[$BG_Index] * 3;
		else
			set .@Req, .BG_Min[$BG_Index] * 2;

		if( .@Queue_Count >= .@Req )
		{
			donpcevent .BG_Arena$ + "::OnBuildTeams";

			// Fill Teams with Queue Members			
			if( .BG_Arenas$[$BG_Index] == "Tierra_TI" )
				bg_queue2teams .BG_Queue,.BG_Min[$BG_Index],.BG_Max[$BG_Index],.TeamMode,$@BG_Team1,$@BG_Team2,$@BG_Team3;
			else
				bg_queue2teams .BG_Queue,.BG_Min[$BG_Index],.BG_Max[$BG_Index],.TeamMode,$@BG_Team1,$@BG_Team2;

			stopnpctimer; // Rotation if BG don't start... Comment if you don't want to use this method

			set $@BG_Status,1;
			set .@msg$, "Battlegrounds -- " + .BG_Names$[$BG_Index] + " -- Beginning";
			announce .@msg$,0,.BG_Color$[$BG_Index];

			donpcevent .BG_Arena$ + "::OnReady";
		}
		else
		{
			set .@QPlayers, .@Req - .@Queue_Count;
			set .@msg$, "Battleground -- " + .BG_Names$[$BG_Index] + " -- " + .@QPlayers + " more players to start.";
			if(.@QPlayers <= 2){
				announce .@msg$,0,.BG_Color$[$BG_Index];
			}
			else {
				mapannounce "bat_room",.@msg$,bc_map,.BG_Color$[$BG_Index];
			}
		}
		break;
	case 1: // Running - Others can join
		if( .@Queue_Count > 0 )
		{
			if( .BG_Arena$ == "Tierra_TI" )
			{
				bg_balance_teams .BG_Queue,.BG_Max[$BG_Index],.TeamMode,$@BG_Team1,$@BG_Team2,$@BG_Team3;
				set .@BG_Count1, bg_get_data($@BG_Team1,0);
				set .@BG_Count2, bg_get_data($@BG_Team2,0);
				set .@BG_Count3, bg_get_data($@BG_Team3,0);
				set .@msg$, "Battleground -- " + .BG_Names$[$BG_Index] + " -- B: " + .@BG_Count1 + "/" + .BG_Max[$BG_Index] + ", R: " + .@BG_Count2 + "/" + .BG_Max[$BG_Index] + ", G: " + .@BG_Count3 + "/" + .BG_Max[$BG_Index] + " (Playing)";
			}
			else
			{
				bg_balance_teams .BG_Queue,.BG_Max[$BG_Index],.TeamMode,$@BG_Team1,$@BG_Team2;
				set .@BG_Count1, bg_get_data($@BG_Team1,0);
				set .@BG_Count2, bg_get_data($@BG_Team2,0);
				set .@msg$, "Battleground -- " + .BG_Names$[$BG_Index] + " -- B: " + .@BG_Count1 + "/" + .BG_Max[$BG_Index] + ", R: " + .@BG_Count2 + "/" + .BG_Max[$BG_Index] + " (Playing)";
			}

			mapannounce "bat_room",.@msg$,bc_map,.BG_Color$[$BG_Index];
		}
		break;
	}
	end;

OnVersusJoin:
	if( $@VS_Status != 0 )
		end;

	set .@Queue_Count, bg_queue_data(.VS_Queue,0);
	if( .@Queue_Count >= 10 )
	{
		donpcevent "FFA_Arena::OnBuildTeams";
		bg_queue2teams .VS_Queue,1,35,0,$@VS_Team[0],$@VS_Team[1],$@VS_Team[2],$@VS_Team[3],$@VS_Team[4],$@VS_Team[5],$@VS_Team[6],$@VS_Team[7],$@VS_Team[8],$@VS_Team[9];
		set $@VS_Status,1;
		announce "Battleground -- Free For All -- Begining",0,0x483D8B;
		donpcevent "FFA_Arena::OnReady";
	}
	else
		mapannounce "bat_room","Battleground -- Free For All -- " + (10 - .@Queue_Count) + " more players to start",bc_map,0x483D8B;
	end;

OnFri0600: // Friday, 6 a.m.
	rankreset 1; // Ranking Reset
	end;

// BattleGround Happy Hour
OnDoHappyHour:
OnClock1600:
OnClock1800:
OnClock2000:
OnClock2200:
	switch( gettime(4) )
	{
	case 1:
	case 3:
	case 5:
		if( gettime(3) >= 20 && gettime(3) < 22 )
		{
			announce "-- Battleground Happy Hour has begun | Ranked Arena Mode --",0,0x00FF00;
			setbattleflag "bg_reward_rates",120; // +20% Reward Rates
			setbattleflag "bg_ranked_mode",1;
			end;
		}
		
		if( gettime(3) == 22 )
		{
			announce "-- Battleground Happy Hour is over | Regular Arena Mode --",0,0x00BFFF;
			setbattleflag "bg_reward_rates",100; // Normal Rates
			setbattleflag "bg_ranked_mode",0;
			end;
		}
		break;
	case 2:
	case 4:
	case 6:
		if( gettime(3) >= 16 && gettime(3) < 18 )
		{
			announce "-- Battleground Happy Hour has begun | Ranked Arena Mode --",0,0x00FF00;
			setbattleflag "bg_reward_rates",120; // +20% Reward Rates
			setbattleflag "bg_ranked_mode",1;
			end;
		}
		
		if( gettime(3) == 18 )
		{
			announce "-- Battleground Happy Hour is over | Regular Arena Mode --",0,0x00BFFF;
			setbattleflag "bg_reward_rates",100; // Normal Rates
			setbattleflag "bg_ranked_mode",0;
			end;
		}
		break;
	}
	end;

OnAskRejoin:
	mes "[Battlegrounds]";
	mes "Would you like to rejoin the Battlegrounds queue?";
	if (select("Yes:No") == 2) close;
	set #Current_BG , $@Current_Arena;
	bg_queue_join getvariableofnpc(.BG_Queue,"BG_Queue_Join");
	close;
	end;
}

// Registration NPC
// *********************************************************************
-	script	BG_Register	-1,{
	if( getvariableofnpc(.Ready,"BG_Queue_Join") == 0 )
		donpcevent "BG_Queue_Join::OnInit";
	cutin "ein_soldier",2;

	if (Class < 23 || (Class > 4000 && Class < 4008) || (Class > 4022 && Class < 4046)) {
		mes "[^FFA500Battle Recruiter^000000]";
		mes "I'm sorry, your class is not permitted to join the battlegrounds.";
		cutin "ein_soldier",255;
		close;
	}
	else if( BaseLevel < 98 ){
		mes "[^FFA500Battle Recruiter^000000]";
		mes "The minimum required level to join battlegrounds is 98.";
		cutin "ein_soldier",255;
		close;
	}

	mes "[^FFA500Battle Recruiter^000000]";
	mes "This is the Battleground Information and Registration service.";
	mes "What do you want to do?";
	next;
	switch( select("^FFA500Battleground Arenas^000000:^0000FFFree For All Arena^000000:Warp to Battle Room") )
	{
	case 1:
		mes "[^FFA500Battle Recruiter^000000]";
		mes "Battlegrounds Arena are different kinds of games where Teams fight for victory.";
		mes "What do you want to do?";
		next;
		switch( select("Register:Leave Queue:Battlegrounds Guide") )
		{
		case 1:
			if (Class < 23 || (Class > 4000 && Class < 4008) || (Class > 4022 && Class < 4046)) {
				mes "[^FFA500Battle Recruiter^000000]";
				mes "I'm sorry, your class is not permitted to join.";
				cutin "ein_soldier",255;
				close;
			}			
			if( BaseLevel < 90 )
			{
				mes "[^FFA500Battle Recruiter^000000]";
				mes "Min required level to join a battleground is 90.";
				cutin "ein_soldier",255;
				close;
			}
			if( checkquest(8506,PLAYTIME) == 2 )
				erasequest 8506;
			if( checkquest(8506,PLAYTIME) != -1 )
			{
				mes "[^FFA500Battle Recruiter^000000]";
				mes "You are a Deserter. You can't participate until the indicator goes off";
				close;
			}
			
		if(knowledgeable == 0){
				mes "[^FFA500Battle Recruiter^000000]";
				mes "Remember by AFKing or leaving the battlegrounds in any method will result to a ^FF0000temporary^000000 ban in battlegrounds!";
				next;
				mes "[^FFA500Battle Recruiter^000000]";
				mes "Also, be responsible enough to use @leader to transfer leadership when necessary/being asked by your teammates.";
				mes "Type ^FF0000I agree^000000 to continue";
				input .understood$;
				if((.understood$ == "i agree") || (.understood$ == "I agree")){
					next;
					mes "[^FFA500Battle Recruiter^000000]";
					mes "Thank you for agreeing to the terms.";
					mes "I will now quiz you on some important Battlegrounds information. You will only need to pass this quiz once.";
					while (!knowledgeable) {
						next;
						mes "[^FFA500Battle Recruiter^000000]";
						mes "Question 1 - In order to win conquest mode you need to destroy the guardian stones, gates and the ...";
						input .@answer$;
						if (!(.@answer$ == "emperium" || .@answer$ == "Emperium")) {
							mes "^FF0000Incorrect answer!^000000";
							next;
							mes "[^FFA500Battle Recruiter^000000]";
							mes "Do you wish to retry the quiz?";
							if (select("Yes:No") == 2)
								close;
							continue;
						}
						mes "^00FF00Correct answer!^000000";
						next;
						mes "[^FFA500Battle Recruiter^000000]";
						mes "Question 2 - With what command do you transfer leadership in bg?";
						input .@answer$;
						if (!(.@answer$ == "@leader" || .@answer$ == "@Leader")) {
							mes "^FF0000Incorrect answer!^000000";
							next;
							mes "[^FFA500Battle Recruiter^000000]";
							mes "Do you wish to retry the quiz?";
							if (select("Yes:No") == 2)
								close;
							continue;
						}
						mes "^00FF00Correct answer!^000000";
						next;
						mes "[^FFA500Battle Recruiter^000000]";
						mes "Question 3 - With what command do you kick an AFK player from bg?";
						input .@answer$;
						if (!(.@answer$ == "@reportafk" || .@answer$ == "@Reportafk")) {
							mes "^FF0000Incorrect answer!^000000";
							next;
							mes "[^FFA500Battle Recruiter^000000]";
							mes "Do you wish to retry the quiz?";
							if (select("Yes:No") == 2)
								close;
							continue;
						}
						mes "^00FF00Correct answer!^000000";
						next;
						mes "[^FFA500Battle Recruiter^000000]";
						mes "Question 4 - Is dual clienting allowed in BG?";
						if (select("Yes:No") == 1) {
							mes "^FF0000Incorrect answer!^000000";
							next;
							mes "[^FFA500Battle Recruiter^000000]";
							mes "Do you wish to retry the quiz?";
							if (select("Yes:No") == 2)
								close;
							continue;
						}
						mes "^00FF00Correct answer!^000000";
						next;
						mes "[^FFA500Battle Recruiter^000000]";
						mes "Question 5 - Is afking in BG allowed?";
						if (select("Yes:No") == 1) {
							mes "^FF0000Incorrect answer!^000000";
							next;
							mes "[^FFA500Battle Recruiter^000000]";
							mes "Do you wish to retry the quiz?";
							if (select("Yes:No") == 2)
								close;
							continue;
						}
						mes "^00FF00Correct answer!^000000";
						set knowledgeable, 1;
					}		
					next;
					mes "[^FFA500Battle Recruiter^000000]";
					mes "You have successfully passed the Battlegrounds quiz.";
					next;
					mes "[^FFA500Battle Recruiter^000000]";
					mes "Let's proceed with the registration...";
					mes "You must wait on any City until BG starts.";
					mes "Close this window to continue...";
					cutin "ein_soldier",255;
					close2;
					set #Current_BG , $@Current_Arena;
					bg_queue_join getvariableofnpc(.BG_Queue,"BG_Queue_Join");
					end;
				}
				else{
					next;
					mes "[^FFA500Battle Recruiter^000000]";
					mes "Sorry, you can't join the battlegrounds.";
					close;
					end;
				}
		}
		else{
					mes "[^FFA500Battle Recruiter^000000]";
					mes "Let's proceed with the registration...";
					mes "You must wait on any City until BG starts.";
					mes "Close this window to continue...";
					cutin "ein_soldier",255;
					close2;
					set #Current_BG , $@Current_Arena;
					bg_queue_join getvariableofnpc(.BG_Queue,"BG_Queue_Join");
					end;
		}
			break;
		//case 2:
		//	if( getcharid(1) == 0 )
		//	{
		//		mes "[^FFA500Battle Recruiter^000000]";
		//		mes "You are not on a Party.";
		//		close;
		//	}

		//	mes "[^FFA500Battle Recruiter^000000]";
		//	mes "Let's proceed with the registration...";
		//	mes "You must wait on any City until BG starts.";
		//	mes "Close this window to continue...";
		//	close2;
		//	bg_queue_partyjoin getcharid(1),getvariableofnpc(.BG_Queue,"BG_Queue_Join");
		//	end;
		case 2:
			mes "[^FFA500Battle Recruiter^000000]";
			mes "Close this window to continue...";
			cutin "ein_soldier",255;
			close2;
			bg_queue_leave getvariableofnpc(.BG_Queue,"BG_Queue_Join");
			end;
		case 3:
			mes "[^FFA500Battle Recruiter^000000]";
			mes "Which among the Battlegrounds option are you in need of guidance?";
			next;
			switch( select("Conquest:Rush") )
			{
			case 1:
				mes "[^FFA500Battle Recruiter^000000]";
				mes "If you are Attacking, destroy the enemy defenses and their castle emperium.";
				next;
				mes "[^FFA500Battle Recruiter^000000]";
				mes "It is a must to know how to use ^0000FF@leader^000000 to transfer guild leadership and use guild skill ^0000FFEmergency Call^000000 at the right times.";
				next;
				mes "[^FFA500Battle Recruiter^000000]";
				mes "If you are Defending, protect your castle emperium by using the flags to warp to defense points.";
				next;
				mes "[^FFA500Battle Recruiter^000000]";
				mes "Disrupting the enemy team by guarding the stones or castle walls.";
				break;
			case 2:
				mes "[^FFA500Battle Recruiter^000000]";
				mes "Both teams will fight to capture the Castle by destroying the emperium.";
				next;
				mes "[^FFA500Battle Recruiter^000000]";
				mes "If you fail on the first capture, kill the defender and take it for your team.";
				break;
				mes "[^FFA500Battle Recruiter^000000]";
				mes "A point is earned every time a capture is done.";
				break;
			}
			next;
			mes "[^FFA500Battle Recruiter^000000]";
			mes "Remember by AFKing or leaving the battlegrounds in any method will result to a ^FF0000temporary^000000 10 minute ban!";
			break;
		}
		cutin "ein_soldier",255;
		close;
	case 2:
		mes "[^FFA500Battle Recruiter^000000]";
		mes "Free For All Arena is a Duel between 10 players with No Teams.";
		mes "The target is to kill 25 players.";
		mes "What do you want to do?";
		next;
		switch( select("Register:Leave Queue") )
		{
		case 1:
			if( BaseLevel < 80 )
			{
				mes "[^FFA500Battle Recruiter^000000]";
				mes "Min required level to join a battleground is 80.";
				close;
			}
			if( checkquest(8506,PLAYTIME) == 2 )
				erasequest 8506;
			if( checkquest(8506,PLAYTIME) != -1 )
			{
				mes "[^FFA500Battle Recruiter^000000]";
				mes "You are a Deserter. You can't participate until the indicator goes off";
				cutin "ein_soldier",255;
				close;
			}

			mes "[^FFA500Battle Recruiter^000000]";
			mes "Let's proceed with the registration...";
			mes "You must wait on any City until BG starts.";
			mes "Close this window to continue...";
			cutin "ein_soldier",255;
			close2;
			bg_queue_join getvariableofnpc(.VS_Queue,"BG_Queue_Join");
			end;
		case 2:
			mes "[^FFA500Battle Recruiter^000000]";
			mes "If you are registered, you will be removed.";
			mes "Are you sure?";
			next;
			if( select("Yes, leave queue:No, I will stay") == 2 )
			{
				mes "[^FFA500Battle Recruiter^000000]";
				mes "Ok, nothing to change.";
				cutin "ein_soldier",255;
				close;
			}

			mes "[^FFA500Battle Recruiter^000000]";
			mes "Close this window to continue...";
			cutin "ein_soldier",255;
			close2;
			bg_queue_leave getvariableofnpc(.VS_Queue,"BG_Queue_Join");
			end;
		}
		break;
	case 3:
		mes "[^FFA500Battle Recruiter^000000]";
		mes "May the War God bless you.";
		cutin "ein_soldier",255;
		close2;
		warp "bat_room",155,150;
		end;
	}
	end;
}

bat_room,160,150,3	duplicate(BG_Register)	Battle Recruiter#bat	852
prontera,147,175,6	duplicate(BG_Register)	Battle Recruiter#prt	852

// General Guillaume
// *********************************************************************
bat_room,160,159,3	script	General Guillaume	420,{
	cutin "bat_kiyom2",2;
	mes "[General Guillaume]";
	mes "Hot-blooded adventurer, we need your ability to win this battle.";
	next;
	cutin "bat_kiyom1",2;
	mes "[General Guillaume]";
	mes "Our great king, Marcel Marollo VII, is very sick lately. His Majesty has declared that he chosen either me or Prince Croix as the next king amongst his 9 sons.";
	next;
	mes "[General Guillaume]";
	mes "Two kings can't share a nation!";
	mes "Only the one victorious from His Majesty's appointed battle will be enthroned.";
	next;
	mes "[General Guillaume]";
	mes "This is however, not just a battle between us. This battle will determine the future of this country. I pledge on my honor to prove that I'm the one who can protect this Maroll from outside threats.";
	next;
	mes "[General Guillaume]";
	mes "I'll be the one who will capture the flag!";
	close2;
	cutin "",255;
	end;
}

// General Croix
// *********************************************************************
bat_room,160,140,3	script	Prince Croix	416,{
	cutin "bat_crua1",2;
	mes "[Prince Croix]";
	mes "Wise adventurer, why don't you lend us your power for victory?";
	next;
	cutin "bat_crua2",2;
	mes "[Prince Croix]";
	mes "I do not wish to shed blood, but I have no choice but to fight for the possibility of peace and for the sake of my people.";
	next;
	mes "[Prince Croix]";
	mes "General Guillaume may have an advantage in this battle as he is the great general of Maroll, but that doesn't automatically mean he'll win. I want to win this battle so that I can grant a better future for my people.";
	next;
	mes "[Prince Croix]";
	mes "For Maroll!";
	close2;
	cutin "",255;
	end;
}

// Guard Dummy
// *********************************************************************

bat_room,161,141,3	script	Prince Croix's Aid::bat_aid	415,{ end; }
bat_room,161,139,3	duplicate(bat_aid)	Prince Croix's Aid::bat_aid2	415
bat_room,161,160,3	duplicate(bat_aid)	General Guillaume's Aid::bat_aid3	419
bat_room,161,158,3	duplicate(bat_aid)	General Guillaume's Aid::bat_aid4	419

// Flags
// *********************************************************************

-	script	Guillaume camp#bat	973,{ end; }
-	script	Croix camp#bat	974,{ end; }

// BattleGround Warper - Exit
// *********************************************************************

bat_room,148,150,4	script	Teleporter#bat	124,{
	mes "[Teleporter]";
	mes "Do you wish to leave the battlefield? Use my service to return to town.";
	next;
	if( select("Leave:Don't Leave") == 2 )
	{
		mes "[Teleporter]";
		mes "I'll be here whenever you're in need of my service.";
		close;
	}

	switch( @ArenaPVP_out )
	{
		// Rune Midgard Republic
		case 1: warp "prontera",149,92; break;
		case 2: warp "payon",165,98; break;
		case 3: warp "morocc",153,94; break;
		case 4: warp "umbala",121,143; break;
		case 5: warp "comodo",196,140; break;
		case 6: warp "niflheim",214,193; break;
		case 7: warp "aldebaran",143,111; break;
		case 8: warp "geffen",107,53; break;
		// Schwarzard Republic
		case 9: warp "yuno",151,177; break;
		case 10: warp "hugel",99,143; break;
		case 11: warp "lighthalzen",167,93; break;
		case 12: warp "einbroch",70,194; break;
		case 13: warp "einbech",168,130; break;
		// Arunafelz Republic
		case 14: warp "rachel",118,114; break;
		case 15: warp "veins",207,122; break;
		// Islands
		case 16: warp "nameless_n",161,179; break;
		case 17: warp "louyang",213,106; break;
		case 18: warp "gonryun",154,111; break;
		case 19: warp "ayothaya",148,109; break;
		case 20: warp "moscovia",229,195; break;
		case 21: warp "xmas",151,127; break;
		case 22: warp "amatsu",203,107; break;
		case 23: warp "izlude",126,114; break;
		case 24: warp "brasilis",195,211; break;
		case 25: warp "manuk",279,214; break;
		case 26: warp "splendide",200,174; break;
		// Anyplace else
		default:
			set .@spoint$, getsavepoint(0);
			set .@x, getsavepoint(1);
			set .@y, getsavepoint(2);
			mes "[Teleporter]";
			mes "You will be sent back to " + .@spoint$ + ".";
			close2;
			warp .@spoint$, .@x, .@y;
			break;
	}
	
	set @ArenaPVP_out, 0;
	end;
}

// Kafra
// *********************************************************************
bat_room,148,147,4	script	Kafra Staff::kaf_bat	861,{
	cutin "kafra_09",2;
	callfunc "F_Kafra",0,2,1,150,0;
}
	

